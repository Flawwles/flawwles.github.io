{"version":3,"sources":["webpack:///./src/pages/labs/contrast/components/chip.js","webpack:///./node_modules/get-contrast/index.js","webpack:///./node_modules/rgb/index.js","webpack:///./node_modules/get-contrast/node_modules/wcag-contrast/index.js","webpack:///./node_modules/relative-luminance/index.js","webpack:///./node_modules/hex-rgb/index.js","webpack:///./node_modules/is-blank/index.js","webpack:///./node_modules/is-empty/index.js","webpack:///./node_modules/is-whitespace/index.js","webpack:///./node_modules/is-named-css-color/index.js","webpack:///./node_modules/css-color-list/index.js"],"names":["Chip","props","_this","_Component","call","this","checkHex","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","hex","length","charAt","render","setOpacity","propHex1","color1","propHex2","color2","hex1","split","join","hex2","ratio","Math","round","contrast","score","hideFailed","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","style","background","color","padding","textAlign","borderRadius","opacity","children","hideRatio","Component","rgb","__webpack_require__","wcag","isBlank","isNamedCssColor","cssColorNames","colorOne","colorTwo","options","getRgbTriplet","TypeError","isNotTransparent","match","slice","cArray","ignoreAlpha","module","exports","wcagScore","isAccessible","colors","maroon","red","orange","yellow","olive","purple","fuchsia","white","lime","green","navy","blue","aqua","teal","black","silver","gray","transparent","HUEtoRGB","p","q","t","keys","c","push","shex","sval","slist","skeys","xhex","RegExp","xrgb","xhsl","input","array","replace","h0","h1","h2","h3","i","l","parseInt","substr","HEXtoRGB","h","s","r","b","g","parseFloat","apply","splice","regexp","string","method","matches","luminance","hexRgb","fromLum","max","min","fromRGB","adjustGamma","_","pow","rsrgb","gsrgb","bsrgb","num","isEmpty","isWhitespace","object","val","undefined","key","has","Object","prototype","hasOwnProperty","cache","str","test","cssColors"],"mappings":"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","file":"component---src-pages-labs-contrast-components-chip-js-7f75212d325721d7f4de.js","sourcesContent":["import React, {Component} from \"react\"\nimport contrast from \"get-contrast\"\n\nexport default class Chip extends Component {\n  constructor(props) {\n    super(props)\n    this.checkHex = this.checkHex.bind(this);\n  }\n  //This needs rework to better validate if a hex colour is validate\n  // Currently only checking for 3 or 6 digit hex with the # ..\n  // Returns white just to stop the contras ratio script going mad\n  checkHex(hex) {\n    if(hex.length === 7 || hex.length === 4) {\n      if(hex.charAt(0) === \"#\") {\n        return hex\n      }\n      return \"#fff\"\n    } else {\n      return \"#fff\"\n    }\n  }\n  //contrast accepts HEX RGB REGA\n  // contrast.ratio('#fafafa', 'rgba(0,0,0,.75)') // => 10\n  // contrast.score('#fafafa', 'rgba(0,0,0,.75)') // => 'AAA'\n  // contrast.isAccessible('#fafafa', 'rgba(0,0,0,.75)') // => true\n\n  render() {\n    let setOpacity = \"1\"\n    //Make it easier to use props but also remove any spaces - Might be better to do this sooner?\n    const propHex1 = this.props.color1\n    const propHex2 = this.props.color2\n    const hex1 = propHex1.split(' ').join('')\n    const hex2 = propHex2.split(' ').join('')\n\n    const ratio = Math.round(\n      contrast.ratio(\n        this.checkHex(hex1),\n        this.checkHex(hex2)\n      ) * 100) / 100\n    // Set opacity if test has failed and user has requested to hide failed tests\n   if(contrast.score(this.checkHex(hex1), this.checkHex(hex2)) === 'F' && this.props.hideFailed){\n      setOpacity = '0.1'\n    }\n\n    return (\n      <div style={{\n        background: hex1,\n        color: hex2,\n        padding: '0.2rem',\n        textAlign: 'center',\n        borderRadius: '3px',\n        opacity: setOpacity\n      }}>\n        {this.props.children}&nbsp;\n        {contrast.score(this.checkHex(hex1), this.checkHex(hex2))}&nbsp;\n        {this.props.hideRatio ? ratio : null}\n      </div>\n    )\n  }\n}\n","var rgb = require('rgb')\nvar wcag = require('wcag-contrast')\nvar isBlank = require('is-blank')\nvar isNamedCssColor = require('is-named-css-color')\nvar cssColorNames = require('css-color-names')\n\nmodule.exports.ratio = ratio\nmodule.exports.score = score\nmodule.exports.isAccessible = isAccessible\nmodule.exports.isNotTransparent = isNotTransparent\n\nfunction ratio(colorOne, colorTwo, options) {\n  colorOne = getRgbTriplet(colorOne, options)\n  colorTwo = getRgbTriplet(colorTwo, options)\n\n  return wcag.rgb(colorOne, colorTwo)\n}\n\nfunction score(colorOne, colorTwo, options) {\n  var wcagScore = wcag.score(ratio(colorOne, colorTwo, options))\n\n  if (isBlank(wcagScore)) {\n    return 'F'\n  } else {\n    return wcagScore\n  }\n}\n\nfunction isAccessible(colorOne, colorTwo, options) {\n  return ratio(colorOne, colorTwo, options) > 4.5\n}\n\nfunction getRgbTriplet(color, options) {\n  if (typeof color !== 'string') {\n    throw new TypeError('get-contrast expects colors as strings')\n  }\n\n  if (isNamedCssColor(color)) {\n    color = cssColorNames[color]\n  }\n\n  color = isNotTransparent(color, options)\n  return color.match(/\\((.*)\\)/)[1].split(',').slice(0, 3)\n}\n\nfunction isNotTransparent(color, options) {\n  options = options || {}\n\n  // Convert to RGB.\n  color = rgb(color)\n  // Check if the rgb returned color is rgba and if the 'a' value is 0.\n  var cArray = color.match(/\\((.*)\\)/)[1].split(',')\n  if (cArray.length == 4 && cArray[3] == '0' && !options.ignoreAlpha) {\n    throw new TypeError('get-contrast cannot contrast transparent colors')\n  } else {\n    return color\n  }\n}\n","/*\ncolor\n*/\"use strict\"\n\nvar colors = {\n    maroon      : \"#800000\",\n    red         : \"#ff0000\",\n    orange      : \"#ffA500\",\n    yellow      : \"#ffff00\",\n    olive       : \"#808000\",\n    purple      : \"#800080\",\n    fuchsia     : \"#ff00ff\",\n    white       : \"#ffffff\",\n    lime        : \"#00ff00\",\n    green       : \"#008000\",\n    navy        : \"#000080\",\n    blue        : \"#0000ff\",\n    aqua        : \"#00ffff\",\n    teal        : \"#008080\",\n    black       : \"#000000\",\n    silver      : \"#c0c0c0\",\n    gray        : \"#808080\",\n    transparent : \"#0000\"\n}\n\nvar RGBtoRGB = function(r, g, b, a){\n    if (a == null || a === \"\") a = 1\n    r = parseFloat(r)\n    g = parseFloat(g)\n    b = parseFloat(b)\n    a = parseFloat(a)\n    if (!(r <= 255 && r >= 0 && g <= 255 && g >= 0 && b <= 255 && b >= 0 && a <= 1 && a >= 0)) return null\n\n    return [Math.round(r), Math.round(g), Math.round(b), a]\n}\n\nvar HEXtoRGB = function(hex){\n    if (hex.length === 3) hex += \"f\"\n    if (hex.length === 4){\n        var h0 = hex.charAt(0),\n            h1 = hex.charAt(1),\n            h2 = hex.charAt(2),\n            h3 = hex.charAt(3)\n\n        hex = h0 + h0 + h1 + h1 + h2 + h2 + h3 + h3\n    }\n    if (hex.length === 6) hex += \"ff\"\n    var rgb = []\n    for (var i = 0, l = hex.length; i < l; i += 2) rgb.push(parseInt(hex.substr(i, 2), 16) / (i === 6 ? 255 : 1))\n    return rgb\n}\n\n// HSL to RGB conversion from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n// thank you!\n\nvar HUEtoRGB = function(p, q, t){\n    if (t < 0) t += 1\n    if (t > 1) t -= 1\n    if (t < 1 / 6) return p + (q - p) * 6 * t\n    if (t < 1 / 2) return q\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n    return p\n}\n\nvar HSLtoRGB = function(h, s, l, a){\n    var r, b, g\n    if (a == null || a === \"\") a = 1\n    h = parseFloat(h) / 360\n    s = parseFloat(s) / 100\n    l = parseFloat(l) / 100\n    a = parseFloat(a) / 1\n    if (h > 1 || h < 0 || s > 1 || s < 0 || l > 1 || l < 0 || a > 1 || a < 0) return null\n    if (s === 0){\n        r = b = g = l\n    } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n        var p = 2 * l - q\n        r = HUEtoRGB(p, q, h + 1 / 3)\n        g = HUEtoRGB(p, q, h)\n        b = HUEtoRGB(p, q, h - 1 / 3)\n    }\n    return [r * 255, g * 255, b * 255, a]\n}\n\nvar keys = []\nfor (var c in colors) keys.push(c)\n\nvar shex  = \"(?:#([a-f0-9]{3,8}))\",\n    sval  = \"\\\\s*([.\\\\d%]+)\\\\s*\",\n    sop   = \"(?:,\\\\s*([.\\\\d]+)\\\\s*)?\",\n    slist = \"\\\\(\" + [sval, sval, sval] + sop + \"\\\\)\",\n    srgb  = \"(?:rgb)a?\",\n    shsl  = \"(?:hsl)a?\",\n    skeys = \"(\" + keys.join(\"|\") + \")\"\n\n\nvar xhex   = RegExp(shex, \"i\"),\n    xrgb   = RegExp(srgb + slist, \"i\"),\n    xhsl   = RegExp(shsl + slist, \"i\")\n\nvar color = function(input, array){\n    if (input == null) return null\n    input = (input + \"\").replace(/\\s+/, \"\")\n\n    var match = colors[input]\n    if (match){\n        return color(match, array)\n    } else if (match = input.match(xhex)){\n        input = HEXtoRGB(match[1])\n    } else if (match = input.match(xrgb)){\n        input = match.slice(1)\n    } else if (match = input.match(xhsl)){\n        input = HSLtoRGB.apply(null, match.slice(1))\n    } else return null\n\n    if (!(input && (input = RGBtoRGB.apply(null, input)))) return null\n    if (array) return input\n    if (input[3] === 1) input.splice(3, 1)\n    return \"rgb\" + (input.length === 4 ? \"a\" : \"\") + \"(\" + input + \")\"\n}\n\nvar regexp = RegExp([skeys, shex, srgb + slist, shsl + slist].join(\"|\"), \"gi\")\n\ncolor.replace = function(string, method){\n    if (!method) method = function(match){\n        return color(match)\n    }\n    return (string + \"\").replace(regexp, method)\n}\n\ncolor.matches = function(string){\n    return !!(string + \"\").match(regexp)\n}\n\nmodule.exports = color\n","var luminance = require('relative-luminance');\nvar hexRgb = require('hex-rgb');\n\n// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\nmodule.exports.luminance = fromLum;\nmodule.exports.rgb = fromRGB;\nmodule.exports.hex = fromHex;\nmodule.exports.score = score;\n\n/*\n * @param {number} a luminance value\n * @param {number} b luminance value\n * @returns {number} contrast ratio\n */\nfunction fromLum(a, b) {\n    var l1 = Math.max(a, b),\n        l2 = Math.min(a, b);\n    return (l1 + 0.05) / (l2 + 0.05);\n}\n\n/*\n * @param {array} a rgb value\n * @param {array} b rgb value\n * @returns {number} contrast ratio\n */\nfunction fromRGB(a, b) {\n    return fromLum(luminance(a), luminance(b));\n}\n\n/*\n * @param {string} a hex value\n * @param {string} b hex value\n * @returns {number} contrast ratio\n */\nfunction fromHex(a, b) {\n    return fromRGB(hexRgb(a), hexRgb(b));\n}\n\n/*\n * @param {array} a rgb value\n * @param {array} b rgb value\n * @returns {number} contrast ratio\n */\nfunction score(contrast) {\n    return (contrast >= 7) ? 'AAA' : (contrast >= 4.5) ? 'AA' : '';\n}\n","// # Relative luminance\n//\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n// https://en.wikipedia.org/wiki/Luminance_(relative)\n// https://en.wikipedia.org/wiki/Luminosity_function\n// https://en.wikipedia.org/wiki/Rec._709#Luma_coefficients\n\n// red, green, and blue coefficients\nvar rc = 0.2126,\n    gc = 0.7152,\n    bc = 0.0722,\n    // low-gamma adjust coefficient\n    lowc = 1 / 12.92;\n\nfunction adjustGamma(_) {\n    return Math.pow((_ + 0.055) / 1.055, 2.4);\n}\n\nmodule.exports = function(rgb) {\n    var rsrgb = rgb[0] / 255,\n        gsrgb = rgb[1] / 255,\n        bsrgb = rgb[2] / 255;\n\n    var r = (rsrgb <= 0.03928) ? (rsrgb * lowc) : adjustGamma(rsrgb),\n        g = (gsrgb <= 0.03928) ? (gsrgb * lowc) : adjustGamma(gsrgb),\n        b = (bsrgb <= 0.03928) ? (bsrgb * lowc) : adjustGamma(bsrgb);\n\n    return r * rc + g * gc + b * bc;\n};\n","'use strict';\nmodule.exports = function (hex) {\n\tif (typeof hex !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\thex = hex.replace(/^#/, '');\n\n\tif (hex.length === 3) {\n\t\thex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n\t}\n\n\tvar num = parseInt(hex, 16);\n\n\treturn [num >> 16, num >> 8 & 255, num & 255];\n};\n","var isEmpty = require('is-empty')\nvar isWhitespace = require('is-whitespace')\n\nmodule.exports = function isBlank (object) {\n  if (typeof object === 'boolean') {\n    return false\n  }\n\n  if (typeof object === 'string' && object.length) {\n    return isWhitespace(object)\n  } else {\n    return isEmpty(object)\n  }\n}\n","\n/**\n * Expose `isEmpty`.\n */\n\nmodule.exports = isEmpty;\n\n\n/**\n * Has.\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n/**\n * Test whether a value is \"empty\".\n *\n * @param {Mixed} val\n * @return {Boolean}\n */\n\nfunction isEmpty (val) {\n  if (null == val) return true;\n  if ('number' == typeof val) return 0 === val;\n  if (undefined !== val.length) return 0 === val.length;\n  for (var key in val) if (has.call(val, key)) return false;\n  return true;\n}","/*!\n * is-whitespace <https://github.com/jonschlinkert/is-whitespace>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar cache;\n\nmodule.exports = function isWhitespace(str) {\n  return (typeof str === 'string') && regex().test(str);\n};\n\nfunction regex() {\n  // ensure that runtime compilation only happens once\n  return cache || (cache = new RegExp('^[\\\\s\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF\"]+$'));\n}\n","'use strict'\n\nvar cssColors = require('css-color-list')\n\nmodule.exports = function isNamedCssColor (color) {\n  if (typeof color !== 'string') {\n    throw new TypeError('is-named-css-color expects a string')\n  }\n\n  var cssColorRegex = new RegExp('^' + cssColors().join('|') + '$', 'i')\n  return cssColorRegex.test(color)\n}\n","'use strict';\n\nvar cssColorNames = require('css-color-names');\n\nmodule.exports = function cssColorList() {\n  return Object.keys(cssColorNames);\n}\n"],"sourceRoot":""}